server {
    server_name ccs-dev.ru www.ccs-dev.ru;

    listen 80;
    listen 443 ssl http2;


    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "DENY";
    add_header Strict-Transport-Security 'max-age=31536000';


    ssl_certificate /etc/letsencrypt/live/ccs-dev.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ccs-dev.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    access_log off;
    error_log /var/log/nginx/ccs-dev.ru-error.log;

    root /var/www/crystal/public;
    index index.php index.html;
    fastcgi_read_timeout 30;

   # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    # serve static files directly
	location ~* \.(jpg|jpeg|gif|css|png|js|ico|html)$ {
		access_log off;
		expires max;
		log_not_found off;
	}

	# removes trailing slashes (prevents SEO duplicate content issues)
	if (!-d $request_filename)
	{
		rewrite ^/(.+)/$ /$1 permanent;
	}

    # redirect index.php to root
	if ($request_uri ~* "^(.*/)index\.php$") {
        return 301 $1;
    }

	# enforce NO www
	if ($host ~* ^www\.(.*))
	{
		set $host_without_www $1;
		rewrite ^/(.*)$ $scheme://$host_without_www/$1 permanent;
	}

	# unless the request is for a valid file (image, js, css, etc.), send to bootstrap
	if (!-e $request_filename)
	{
		rewrite ^/(.*)$ /index.php?/$1 last;
		break;
	}

	location / {
		try_files $uri $uri/ /index.php?$query_string;
	}

	location ~* \.php$ {
        try_files $uri = 404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

   location ~ /\.(ht|svn|git) {
         deny all;
   }

   location ~* \.(?:js|css)$ {
         log_not_found off;
         access_log off;
         expires max;
   }

   location ~* \.(?:png|jpeg|jpg|gif|ico|otf|eot|svg|ttf|woff|woff2)$ {
         log_not_found off;
         access_log off;
         expires 30d;
   }
}